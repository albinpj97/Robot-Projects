*** Settings ***
Documentation       Template robot main suite.
Library             RPA.Browser.Selenium
Library             Collections
Library             Functions
Library             Log
Library             MailSend.py
Library             Excel_To_Dictionary.py
Library             ExcelRemove
Library             RPA.FileSystem
Library             RPA.RobotLogListener
Library             RPA.Email.Exchange
Library             RPA.Email.ImapSmtp
Resource            SiteLogin.robot
Resource            SendMail.robot
Resource            ExcelActivities.robot
Resource            KitchensyncProcess.robot
Resource            Login.robot
Resource            Square.robot


*** Variables ***
${ACCOUNT}        rpaautomation@analytix.com
${PASSWORD}       Automation@01801
${SUBJECT}        Message Generated By Robot

*** Keywords ***
test
    Init Process



*** Tasks ***
Analytix Sales Validation Automation
    write_log_text  'tasks'  '-------------------Run started--------------------------'  Output  log

    ${mail_body}    Set Variable        Hi Team, ${\n}${\n}Please find the attached sales validation report. ${\n}${\n}Thank You,${\n}Bot
    ${current_date} =	Get Current Date    result_format=%m/%d/%Y
    
    #Initializing the variables used in the process.
    Init Process
    
    #Clearing the excelr Reports
    Reset Reports

    #Loading the Location_Mapping excel
    ${location_mapping_dic} =    xls_to_dict    ${SalesValidationConfig}
    Log    ${location_mapping_dic}

    #Method to read  SalesValidationConfig
    ${ConfigReadStatus}    ${ConfigSettings}    ${ClientFullDetails}    ${loginwise_client_dic}    Load Config Details     ${SalesValidationConfig} 
    
    IF    '${ConfigReadStatus}' == 'PASS'
        &{list_all_data}   Create Dictionary

        #***************** Insight Process start ********************************************
        IF    '${ConfigSettings}[Insight]' == 'Yes'
            
            ${status1}  ${reason1}   Run Keyword And Ignore Error  Open Website To Login P2     ${ConfigSettings}

            IF    '${status1}' == 'PASS'
                
                    write_log_text  'Login- Open Website To Login:'  ${reason1}'Login Succesfully'  Output  log
                    
                    #Looping through each client to capture sales details from Kitchensync
                    FOR    ${client}    IN    @{ClientFullDetails}
                        
                        ${KitchensyncStatus}  ${KitchensyncReason}   Run Keyword And Ignore Error    Capture Sales Details From Kitchensync P3   ${client}    ${ConfigSettings}[Run]

                        IF    '${KitchensyncStatus}' == 'PASS'
                            Wait Until Keyword Succeeds    ${Retry}x    ${RetrySeconds}s    Click Element    xpath://div[@class="main-menu__logo img"]
                        ELSE
                            Write Status To Run Report     ${client}[Client]     ${current_date}      Capturing the sales details from Kitchensync failed due to ${KitchensyncReason}. 
                            Continue For Loop
                        END
                    END

                    Sleep    2s
                    Logout Insight
            ELSE
                write_log_text  'Login- Open Website To Login:'  ${reason1}  Output  log 
                Write Status To Run Report     ${client}[Client]     ${current_date}      Login to Kitchensync failed due to ${reason1}. 
                Close All Browsers
            END
            
        END
        #***************** Insight Process end ***********************************************

         #Check if dictionary contains value or not
         ${list_all_data}=    Excel_Operations.Read Json   ${JsonFilePath}
         Sleep    2s 

        #***************** Square Up Process start *******************************************
        IF    '${ConfigSettings}[Squareup]' == 'Yes'

            FOR    ${key}    IN    @{loginwise_client_dic.keys()}
                Log    ${key}
                Log    ${loginwise_client_dic["${key}"]}

                ${rows}  ${columns}=    Get table dimensions    ${loginwise_client_dic["${key}"]}

                IF    ${rows} > 0
                    ${status1}  ${reason1}   Run Keyword And Ignore Error   Login to SquareUp     ${ConfigSettings}    ${key}    

                    IF    '${status1}' == 'PASS'
                        ${Status3}  ${list_all_data_temp}   Run Keyword And Ignore Error    Select Each Client    ${loginwise_client_dic["${key}"]}    ${list_all_data}    ${location_mapping_dic}    ${ConfigSettings}    
                        IF    '${Status3}' == 'FAIL'
                            Continue For Loop
                            
                        ELSE
                            ${list_all_data}=  Set Variable  ${list_all_data_temp}

                        END
                        Close Browser
                    ELSE
                        ${RetryStatus1}  ${RetryReason1}   Run Keyword And Ignore Error   Login to SquareUp     ${ConfigSettings}    ${key}
                        IF    '${RetryStatus1}' == 'PASS'
                            ${Status3}  ${list_all_data_temp}   Run Keyword And Ignore Error    Select Each Client    ${loginwise_client_dic["${key}"]}    ${list_all_data}    ${location_mapping_dic}    ${ConfigSettings}
                            IF    '${Status3}' == 'FAIL'
                                Continue For Loop
                            ELSE
                                ${list_all_data}=  Set Variable  ${list_all_data_temp}
                            END
                            Close Browser
                        END

                    END
                    
                END
            END
            
        END
        #***************** Square Up Process end *******************************************
        Log    ${list_all_data}
        
        IF    '${ConfigSettings}[Run]' == 'Monthly'
            Prepare Outputsheet    ${list_all_data}    ${MonthlyOutputSheetPath} 
        ELSE
            Prepare Outputsheet    ${list_all_data}    ${OutputSheetPath}
        END
        
        
    ELSE
        write_log_text  'tasks- Load Config Details:'  'Failed to load config details. Please try again later'  Output  log
    END

    # Send the Outputsheet to client after the excecution of bot
    Log    ${ConfigSettings}[RecipientMail1]
    Log    ${SUBJECT}
    Log    ${mail_body}
    Log    ${OutputSheetPath}
    
    # IF    '${ConfigSettings}[Run]' == 'Monthly'
    #     SendMail    ${SUBJECT}    ${mail_body}    ${MonthlyOutputSheetPath}    ${ConfigSettings}[RecipientMail1]    ${ConfigSettings}[RecipientMail2]    ${ConfigSettings}[RecipientMail3]    ${ConfigSettings}[RecipientMail4] 
    # ELSE
    #     SendMail    ${SUBJECT}    ${mail_body}    ${OutputSheetPath}    ${ConfigSettings}[RecipientMail1]    ${ConfigSettings}[RecipientMail2]    ${ConfigSettings}[RecipientMail3]    ${ConfigSettings}[RecipientMail4]
    # END 
    write_log_text  'tasks'  '-------------------Run ended--------------------------'  Output  log


    
